## Autogenerated by Scribe. DO NOT MODIFY.

name: Threads
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/threads
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store thread'
      description: 'Start a conversation. Creation of a new thread.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The thread's creator name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      auth_field:
        name: auth_field
        description: "The user's auth field ('email' or 'phone')."
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The thread's creator email address (Required when 'auth_field' value is 'email')."
        required: false
        example: john.doe@domain.tld
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: "The thread's creator mobile phone number (Required when 'auth_field' value is 'phone')."
        required: false
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone_country:
        name: phone_country
        description: "The user's phone number's country code (Required when the 'phone' field is filled)."
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      body:
        name: body
        description: 'The name of the user.'
        required: true
        example: 'Modi temporibus voluptas expedita voluptatibus voluptas veniam.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      post_id:
        name: post_id
        description: 'The related post ID.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      file_path:
        name: file_path
        description: 'The thread attached file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      captcha_key:
        name: captcha_key
        description: 'Key generated by the CAPTCHA endpoint calling (Required when the CAPTCHA verification is enabled from the Admin panel).'
        required: false
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      auth_field: email
      email: john.doe@domain.tld
      phone: deserunt
      phone_country: null
      body: 'Modi temporibus voluptas expedita voluptatibus voluptas veniam.'
      post_id: 2
      captcha_key: tempore
    fileParameters:
      file_path: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/threads
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List threads'
      description: |-
        Get all logged user's threads.
        Filters:
        - unread: Get the logged user's unread threads
        - started: Get the logged user's started threads
        - important: Get the logged user's make as important threads
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      filter:
        name: filter
        description: 'Filter for the list - Possible value: unread, started or important.'
        required: false
        example: unread
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: post.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      perPage:
        name: perPage
        description: 'Items per page. Can be defined globally from the admin settings. Cannot be exceeded 100.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      filter: unread
      embed: null
      perPage: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated or token expired, please log-in.","result":null,"error":"Unauthenticated or token expired, please log-in."}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cafaDV31d48vPg5hE6eZ6bk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/threads/{id}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get thread'
      description: 'Get a thread (owned by the logged user) details'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The thread's ID."
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters:
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: user,post,messages,participants.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      embed: null
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated or token expired, please log-in.","result":null,"error":"Unauthenticated or token expired, please log-in."}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e8dE6hb6cgaVkDv5aZP1f43'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/threads/{id}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update thread'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The thread's ID."
        required: true
        example: 111111
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 111111
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'The name of the user.'
        required: true
        example: 'Modi temporibus voluptas expedita voluptatibus voluptas veniam.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      file_path:
        name: file_path
        description: 'The thread attached file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      body: 'Modi temporibus voluptas expedita voluptatibus voluptas veniam.'
    fileParameters:
      file_path: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4fgv1bhEP6Da6V58cdeka3Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/threads/{ids}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete thread(s)'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      ids:
        name: ids
        description: 'The ID or comma-separated IDs list of thread(s).'
        required: true
        example: '111111,222222,333333'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      ids: '111111,222222,333333'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c6Ed5aghfev4D6PZb8ka13V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/threads/bulkUpdate/{ids?}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk updates'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      ids:
        name: ids
        description: 'The ID or comma-separated IDs list of thread(s)..'
        required: true
        example: '111111,222222,333333'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      ids: '111111,222222,333333'
    queryParameters:
      type:
        name: type
        description: 'The type of action to execute (markAsRead, markAsUnread, markAsImportant, markAsNotImportant or markAllAsRead).'
        required: true
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      type: expedita
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d1ZV5Egh8fa3vcke4a6bP6D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/threads/{threadId}/messages'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List messages'
      description: "Get all thread's messages"
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      threadId:
        name: threadId
        description: "The thread's ID."
        required: true
        example: 293
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      threadId: 293
    queryParameters:
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: user.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'The sorting parameter (Order by DESC with the given column. Use "-" as prefix to order by ASC). Possible values: created_at.'
        required: false
        example: created_at
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      perPage:
        name: perPage
        description: 'Items per page. Can be defined globally from the admin settings. Cannot be exceeded 100.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      embed: null
      sort: created_at
      perPage: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated or token expired, please log-in.","result":null,"error":"Unauthenticated or token expired, please log-in."}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k1a6Z65cE3fPb8ahvDdeg4V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/threads/{threadId}/messages/{id}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get message'
      description: "Get a thread's message (owned by the logged user) details"
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      threadId:
        name: threadId
        description: "The thread's ID."
        required: true
        example: 293
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      id:
        name: id
        description: "The thread's message's ID."
        required: true
        example: 3545
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      threadId: 293
      id: 3545
    queryParameters:
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: thread,user.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      embed: null
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated or token expired, please log-in.","result":null,"error":"Unauthenticated or token expired, please log-in."}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ab6184Paekdg6fV5h3DvcEZ'
    controller: null
    method: null
    route: null
    custom: []
